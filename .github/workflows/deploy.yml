name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}-${{ github.run_id }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: gradlew bootJar
        run: ./gradlew bootJar

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: herokim97/codesix:latest

#      - name: docker hub push image



#      - name: copy jar to server
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ec2-user
#          key: ${{ secrets.SSH_KEY }}
#          port: 22
#          source: "./build/libs/codesix-0.0.1-SNAPSHOT.jar"
#          target: "~"
#          strip_components: 2


      - name: SSH Commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script_stop: true
          script:

            #실행 중인 도커 컨테이너 중지, 삭제 및 이미지 삭제
            #최신화된 이미지 pull 해오기
            #환경 변수 설정 후 docker run

#            sudo yum update -y && sudo yum install -y java-21-amazon-corretto
#            for pid in $(pgrep java); do
#              if ps -p $pid -o args= | grep -q 'java -jar'; then
#                echo "Java process with 'java -jar' found (PID: $pid). Terminating..."
#                kill -9 $pid
#              fi
#            done
#            echo "nohup java -jar ~/codesix-0.0.1-SNAPSHOT.jar > ~/app.log 2>&1 &" | at now